module.exports = {
  "extends": [
    ":semanticPrefixFixDepsChoreOthers",
    ":ignoreModulesAndTests",
    "replacements:all",
    "workarounds:all",
    ":pinDevDependencies",
    "mergeConfidence:all-badges",
  ],
  // Limit to just Bazel related managers
  enabledManagers: ["pip_requirements"],
  allowedPostUpgradeCommands: [
    ".*echo.*$",
  ],
  packageRules: [
    // common settings
    {
      "enabled": true,
      "matchDatasources": ["pypi"],
      "matchUpdateTypes": ["major", "minor", "patch"],
    },
    // pypi settings
    {
      "matchFileNames": [
        "**/requirements.in",
      ],
      // update the lock file after updating the requirements file
      "postUpgradeTasks": {
        "commands": [
          "echo 'test' >> requirements_lock.txt"
        ],
        // run the task only once after all versions have been updated
        "executionMode": "branch"
      },
    },

    // common settings
    // These common settings are higher priority than the above settings.
    // They are specifically necessary to override any non-common settings that are not desired, for example grouping of major versions together via groupName.
    {
      "matchUpdateTypes": ["major"],
      "groupName": null,
    }
  ],
  pip_requirements: {
    "fileMatch": [
      "^requirements.*\\.in$"
    ]
  },
}
